// Generated from antlr/JSONFormula.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,31,240,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,
1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,
13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,
1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,
23,1,23,1,23,1,23,3,23,137,8,23,1,24,1,24,5,24,141,8,24,10,24,12,24,144,
9,24,1,25,1,25,1,25,5,25,149,8,25,10,25,12,25,152,9,25,1,25,1,25,1,26,1,
26,1,26,5,26,159,8,26,10,26,12,26,162,9,26,1,26,1,26,1,27,1,27,1,27,3,27,
169,8,27,1,28,1,28,1,28,5,28,174,8,28,10,28,12,28,177,9,28,1,28,1,28,1,29,
1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,32,3,32,193,8,32,1,32,
1,32,1,32,4,32,198,8,32,11,32,12,32,199,1,32,3,32,203,8,32,1,32,3,32,206,
8,32,1,32,1,32,1,32,3,32,211,8,32,1,33,3,33,214,8,33,1,33,1,33,1,34,1,34,
1,34,5,34,221,8,34,10,34,12,34,224,9,34,3,34,226,8,34,1,35,1,35,3,35,230,
8,35,1,35,1,35,1,36,4,36,235,8,36,11,36,12,36,236,1,36,1,36,0,0,37,1,1,3,
2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,
16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,
0,57,28,59,0,61,0,63,0,65,29,67,30,69,0,71,0,73,31,1,0,11,3,0,64,90,95,95,
97,122,4,0,48,57,65,90,95,95,97,122,2,0,39,39,92,92,2,0,34,34,92,92,9,0,
34,34,47,47,92,92,96,96,98,98,102,102,110,110,114,114,116,116,3,0,48,57,
65,70,97,102,1,0,48,57,1,0,49,57,2,0,69,69,101,101,2,0,43,43,45,45,3,0,9,
10,13,13,32,32,257,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,
21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,
0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,
0,57,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,73,1,0,0,0,1,75,1,0,0,0,3,77,1,
0,0,0,5,79,1,0,0,0,7,81,1,0,0,0,9,83,1,0,0,0,11,85,1,0,0,0,13,87,1,0,0,0,
15,89,1,0,0,0,17,91,1,0,0,0,19,94,1,0,0,0,21,97,1,0,0,0,23,99,1,0,0,0,25,
101,1,0,0,0,27,103,1,0,0,0,29,105,1,0,0,0,31,107,1,0,0,0,33,109,1,0,0,0,
35,111,1,0,0,0,37,113,1,0,0,0,39,115,1,0,0,0,41,117,1,0,0,0,43,120,1,0,0,
0,45,122,1,0,0,0,47,136,1,0,0,0,49,138,1,0,0,0,51,145,1,0,0,0,53,155,1,0,
0,0,55,165,1,0,0,0,57,170,1,0,0,0,59,180,1,0,0,0,61,183,1,0,0,0,63,189,1,
0,0,0,65,210,1,0,0,0,67,213,1,0,0,0,69,225,1,0,0,0,71,227,1,0,0,0,73,234,
1,0,0,0,75,76,5,46,0,0,76,2,1,0,0,0,77,78,5,94,0,0,78,4,1,0,0,0,79,80,5,
42,0,0,80,6,1,0,0,0,81,82,5,47,0,0,82,8,1,0,0,0,83,84,5,38,0,0,84,10,1,0,
0,0,85,86,5,126,0,0,86,12,1,0,0,0,87,88,5,43,0,0,88,14,1,0,0,0,89,90,5,45,
0,0,90,16,1,0,0,0,91,92,5,38,0,0,92,93,5,38,0,0,93,18,1,0,0,0,94,95,5,124,
0,0,95,96,5,124,0,0,96,20,1,0,0,0,97,98,5,33,0,0,98,22,1,0,0,0,99,100,5,
40,0,0,100,24,1,0,0,0,101,102,5,41,0,0,102,26,1,0,0,0,103,104,5,124,0,0,
104,28,1,0,0,0,105,106,5,91,0,0,106,30,1,0,0,0,107,108,5,44,0,0,108,32,1,
0,0,0,109,110,5,93,0,0,110,34,1,0,0,0,111,112,5,123,0,0,112,36,1,0,0,0,113,
114,5,125,0,0,114,38,1,0,0,0,115,116,5,58,0,0,116,40,1,0,0,0,117,118,5,91,
0,0,118,119,5,63,0,0,119,42,1,0,0,0,120,121,5,64,0,0,121,44,1,0,0,0,122,
123,5,96,0,0,123,46,1,0,0,0,124,137,5,60,0,0,125,126,5,60,0,0,126,137,5,
61,0,0,127,128,5,61,0,0,128,137,5,61,0,0,129,130,5,62,0,0,130,137,5,61,0,
0,131,137,5,62,0,0,132,133,5,33,0,0,133,137,5,61,0,0,134,135,5,60,0,0,135,
137,5,62,0,0,136,124,1,0,0,0,136,125,1,0,0,0,136,127,1,0,0,0,136,129,1,0,
0,0,136,131,1,0,0,0,136,132,1,0,0,0,136,134,1,0,0,0,137,48,1,0,0,0,138,142,
7,0,0,0,139,141,7,1,0,0,140,139,1,0,0,0,141,144,1,0,0,0,142,140,1,0,0,0,
142,143,1,0,0,0,143,50,1,0,0,0,144,142,1,0,0,0,145,150,5,39,0,0,146,149,
3,55,27,0,147,149,8,2,0,0,148,146,1,0,0,0,148,147,1,0,0,0,149,152,1,0,0,
0,150,148,1,0,0,0,150,151,1,0,0,0,151,153,1,0,0,0,152,150,1,0,0,0,153,154,
5,39,0,0,154,52,1,0,0,0,155,160,5,34,0,0,156,159,3,55,27,0,157,159,8,3,0,
0,158,156,1,0,0,0,158,157,1,0,0,0,159,162,1,0,0,0,160,158,1,0,0,0,160,161,
1,0,0,0,161,163,1,0,0,0,162,160,1,0,0,0,163,164,5,34,0,0,164,54,1,0,0,0,
165,168,5,92,0,0,166,169,7,4,0,0,167,169,3,61,30,0,168,166,1,0,0,0,168,167,
1,0,0,0,169,56,1,0,0,0,170,175,5,34,0,0,171,174,3,59,29,0,172,174,8,3,0,
0,173,171,1,0,0,0,173,172,1,0,0,0,174,177,1,0,0,0,175,173,1,0,0,0,175,176,
1,0,0,0,176,178,1,0,0,0,177,175,1,0,0,0,178,179,5,34,0,0,179,58,1,0,0,0,
180,181,5,92,0,0,181,182,9,0,0,0,182,60,1,0,0,0,183,184,5,117,0,0,184,185,
3,63,31,0,185,186,3,63,31,0,186,187,3,63,31,0,187,188,3,63,31,0,188,62,1,
0,0,0,189,190,7,5,0,0,190,64,1,0,0,0,191,193,5,45,0,0,192,191,1,0,0,0,192,
193,1,0,0,0,193,194,1,0,0,0,194,195,3,69,34,0,195,197,5,46,0,0,196,198,7,
6,0,0,197,196,1,0,0,0,198,199,1,0,0,0,199,197,1,0,0,0,199,200,1,0,0,0,200,
202,1,0,0,0,201,203,3,71,35,0,202,201,1,0,0,0,202,203,1,0,0,0,203,211,1,
0,0,0,204,206,5,45,0,0,205,204,1,0,0,0,205,206,1,0,0,0,206,207,1,0,0,0,207,
208,3,69,34,0,208,209,3,71,35,0,209,211,1,0,0,0,210,192,1,0,0,0,210,205,
1,0,0,0,211,66,1,0,0,0,212,214,5,45,0,0,213,212,1,0,0,0,213,214,1,0,0,0,
214,215,1,0,0,0,215,216,3,69,34,0,216,68,1,0,0,0,217,226,5,48,0,0,218,222,
7,7,0,0,219,221,7,6,0,0,220,219,1,0,0,0,221,224,1,0,0,0,222,220,1,0,0,0,
222,223,1,0,0,0,223,226,1,0,0,0,224,222,1,0,0,0,225,217,1,0,0,0,225,218,
1,0,0,0,226,70,1,0,0,0,227,229,7,8,0,0,228,230,7,9,0,0,229,228,1,0,0,0,229,
230,1,0,0,0,230,231,1,0,0,0,231,232,3,69,34,0,232,72,1,0,0,0,233,235,7,10,
0,0,234,233,1,0,0,0,235,236,1,0,0,0,236,234,1,0,0,0,236,237,1,0,0,0,237,
238,1,0,0,0,238,239,6,36,0,0,239,74,1,0,0,0,20,0,136,142,148,150,158,160,
168,173,175,192,199,202,205,210,213,222,225,229,236,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class JSONFormulaLexer extends antlr4.Lexer {

    static grammarFileName = "JSONFormula.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'.'", "'^'", "'*'", "'/'", "'&'", "'~'", 
                         "'+'", "'-'", "'&&'", "'||'", "'!'", "'('", "')'", 
                         "'|'", "'['", "','", "']'", "'{'", "'}'", "':'", 
                         "'[?'", "'@'", "'`'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          "COMPARATOR", "NAME", "QUOTED_NAME", "STRING", 
                          "RAW_STRING", "REAL_OR_EXPONENT_NUMBER", "SIGNED_INT", 
                          "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "COMPARATOR", 
                      "NAME", "QUOTED_NAME", "STRING", "ESC", "RAW_STRING", 
                      "RAW_ESC", "UNICODE", "HEX", "REAL_OR_EXPONENT_NUMBER", 
                      "SIGNED_INT", "INT", "EXP", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

JSONFormulaLexer.EOF = antlr4.Token.EOF;
JSONFormulaLexer.T__0 = 1;
JSONFormulaLexer.T__1 = 2;
JSONFormulaLexer.T__2 = 3;
JSONFormulaLexer.T__3 = 4;
JSONFormulaLexer.T__4 = 5;
JSONFormulaLexer.T__5 = 6;
JSONFormulaLexer.T__6 = 7;
JSONFormulaLexer.T__7 = 8;
JSONFormulaLexer.T__8 = 9;
JSONFormulaLexer.T__9 = 10;
JSONFormulaLexer.T__10 = 11;
JSONFormulaLexer.T__11 = 12;
JSONFormulaLexer.T__12 = 13;
JSONFormulaLexer.T__13 = 14;
JSONFormulaLexer.T__14 = 15;
JSONFormulaLexer.T__15 = 16;
JSONFormulaLexer.T__16 = 17;
JSONFormulaLexer.T__17 = 18;
JSONFormulaLexer.T__18 = 19;
JSONFormulaLexer.T__19 = 20;
JSONFormulaLexer.T__20 = 21;
JSONFormulaLexer.T__21 = 22;
JSONFormulaLexer.T__22 = 23;
JSONFormulaLexer.COMPARATOR = 24;
JSONFormulaLexer.NAME = 25;
JSONFormulaLexer.QUOTED_NAME = 26;
JSONFormulaLexer.STRING = 27;
JSONFormulaLexer.RAW_STRING = 28;
JSONFormulaLexer.REAL_OR_EXPONENT_NUMBER = 29;
JSONFormulaLexer.SIGNED_INT = 30;
JSONFormulaLexer.WS = 31;



